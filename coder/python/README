Python Programming Examples

# Download from github
git clone https://github.com/arunc1985/orchestrator.git && cd orchestrator && git checkout programmer && cd coder/python

# Dockerfile is available in the same directory here by name ~ dockerfile.

# STEP 1 :: Docker Image : Create an Image of my application contents and dependencies.
	<<APP-IMAGE>>

# STEP 2 :: Docker Container : Run the image created in the previous step and check the output.
	Run Image <<APP-IMAGE>> and see output.. It means run the application using dockers.
	When I say dockers it literally means a Software that runs on the docker engine which is installed on the OS.

----------------------------------------------------------------------------------------------------------------
Explaning the dockerfile.
-------------------------

FROM centos:8 # Base image is centos with tag as 8
RUN mkdir final # Create a new directory inside container as final
COPY . final # Copy contents of the python directory here to final dir inside of container
RUN ls final # Check the contents of the final dir
RUN yum -y install python3 # Install python

----------------------------------------------------------------------------------------------------------------

# To Create a docker image of all the exercise folder.

Run Command.

docker build -t py-centos-exercises:v1 -f dockerfile .

----------------------------------------------------------------------------------------------------------------

# To see the container, run command.

Syntax :
	docker run --rm -it --name py-centos-exercises-c py-centos-exercises:v1 python3 <<FULL_PATH_PY_FILE>>

Example :

	docker run --rm -it --name py-centos-exercises-c py-centos-exercises:v1 python3 final/classes/exercise1.py

	Note ::
	
		 The above command launches the image py-centos-exercises:practice as a container 
		 by name py-centos-exercises-c in an interactive mode to execute the python file.
		 It would run in an interactive mode since it has "-it" flag.

		 Once the python file is executed, the container is removed from memory since it has "--rm" flag.

----------------------------------------------------------------------------------------------------------------

# Tag and push image to the docker registry

Syntax ::

	docker tag <<IMAGE-NAME:TAG-NAME>> <<DOCKERHUB-USERNAME>>/<<DOCKERHUB-REGISTRY-NAME>>:<<DOCKERHUB-IMAGE-TAG>>
	docker push <<DOCKERHUB-REGISTRY-NAME>>:<<DOCKERHUB-IMAGE-TAG>>

Command ::
	
	docker tag py-centos-exercises:v1 jupiter19/jupiter19:py-centos-exercises-v1
	docker push jupiter19/jupiter19:py-centos-exercises-v1


----------------------------------------------------------------------------------------------------------------

# Build and deploy the container inside of the K8s System

Syntax ::
	
	kubectl apply -f <<K8S-YAML-FILE>>

Command ::
	
	kubectl apply -f k8s.yaml

----------------------------------------------------------------------------------------------------------------

# Check if the deployment and pods are running.

Command ::
	
	Deployment Details : kubectl get deployments 
	POD Details        : kubectl get pods

	Describe POD       : kubectl describe pod <<POD-NAME>> # Get POD-NAME from command kubectl get pods
	POD Logs           : kubectl logs  <<POD-NAME>> # Get POD-NAME from command kubectl get pods
 
----------------------------------------------------------------------------------------------------------------
